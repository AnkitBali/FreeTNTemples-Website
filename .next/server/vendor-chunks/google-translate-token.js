/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/google-translate-token";
exports.ids = ["vendor-chunks/google-translate-token"];
exports.modules = {

/***/ "(ssr)/./node_modules/google-translate-token/index.js":
/*!******************************************************!*\
  !*** ./node_modules/google-translate-token/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Last update: 2016/06/26\n * https://translate.google.com/translate/releases/twsfe_w_20160620_RC00/r/js/desktop_module_main.js\n *\n * Everything between 'BEGIN' and 'END' was copied from the url above.\n */ var got = __webpack_require__(/*! got */ \"(ssr)/./node_modules/got/index.js\");\nvar Configstore = __webpack_require__(/*! configstore */ \"(ssr)/./node_modules/configstore/index.js\");\n/* eslint-disable */ // BEGIN\nfunction sM(a1) {\n    var b1;\n    if (null !== yr) b1 = yr;\n    else {\n        b1 = wr(String.fromCharCode(84));\n        var c1 = wr(String.fromCharCode(75));\n        b1 = [\n            b1(),\n            b1()\n        ];\n        b1[1] = c1();\n        b1 = (yr = window[b1.join(c1())] || \"\") || \"\";\n    }\n    var d1 = wr(String.fromCharCode(116)), c1 = wr(String.fromCharCode(107)), d1 = [\n        d1(),\n        d1()\n    ];\n    d1[1] = c1();\n    c1 = \"&\" + d1.join(\"\") + \"=\";\n    d1 = b1.split(\".\");\n    b1 = Number(d1[0]) || 0;\n    for(var e1 = [], f1 = 0, g1 = 0; g1 < a1.length; g1++){\n        var l1 = a1.charCodeAt(g1);\n        128 > l1 ? e1[f1++] = l1 : (2048 > l1 ? e1[f1++] = l1 >> 6 | 192 : (55296 == (l1 & 64512) && g1 + 1 < a1.length && 56320 == (a1.charCodeAt(g1 + 1) & 64512) ? (l1 = 65536 + ((l1 & 1023) << 10) + (a1.charCodeAt(++g1) & 1023), e1[f1++] = l1 >> 18 | 240, e1[f1++] = l1 >> 12 & 63 | 128) : e1[f1++] = l1 >> 12 | 224, e1[f1++] = l1 >> 6 & 63 | 128), e1[f1++] = l1 & 63 | 128);\n    }\n    a1 = b1;\n    for(f1 = 0; f1 < e1.length; f1++)a1 += e1[f1], a1 = xr(a1, \"+-a^+6\");\n    a1 = xr(a1, \"+-3^+b+-f\");\n    a1 ^= Number(d1[1]) || 0;\n    0 > a1 && (a1 = (a1 & 2147483647) + 2147483648);\n    a1 %= 1E6;\n    return c1 + (a1.toString() + \".\" + (a1 ^ b1));\n}\nvar yr = null;\nvar wr = function(a1) {\n    return function() {\n        return a1;\n    };\n}, xr = function(a1, b1) {\n    for(var c1 = 0; c1 < b1.length - 2; c1 += 3){\n        var d1 = b1.charAt(c1 + 2), d1 = \"a\" <= d1 ? d1.charCodeAt(0) - 87 : Number(d1), d1 = \"+\" == b1.charAt(c1 + 1) ? a1 >>> d1 : a1 << d1;\n        a1 = \"+\" == b1.charAt(c1) ? a1 + d1 & 4294967295 : a1 ^ d1;\n    }\n    return a1;\n};\n// END\n/* eslint-enable */ var config = new Configstore(\"google-translate-api\");\nvar window = {\n    TKK: config.get(\"TKK\") || \"0\"\n};\nfunction updateTKK() {\n    return new Promise(function(resolve, reject) {\n        var now = Math.floor(Date.now() / 3600000);\n        if (Number(window.TKK.split(\".\")[0]) === now) {\n            resolve();\n        } else {\n            got(\"https://translate.google.com\").then(function(res) {\n                var code = res.body.match(/TKK=(.*?)\\(\\)\\)'\\);/g);\n                if (code) {\n                    eval(code[0]);\n                    /* eslint-disable no-undef */ if (typeof TKK !== \"undefined\") {\n                        window.TKK = TKK;\n                        config.set(\"TKK\", TKK);\n                    }\n                /* eslint-enable no-undef */ }\n                /**\n                 * Note: If the regex or the eval fail, there is no need to worry. The server will accept\n                 * relatively old seeds.\n                 */ resolve();\n            }).catch(function(err1) {\n                var e1 = new Error();\n                e1.code = \"BAD_NETWORK\";\n                e1.message = err1.message;\n                reject(e1);\n            });\n        }\n    });\n}\nfunction get(text1) {\n    return updateTKK().then(function() {\n        var tk1 = sM(text1);\n        tk1 = tk1.replace(\"&tk=\", \"\");\n        return {\n            name: \"tk\",\n            value: tk1\n        };\n    }).catch(function(err1) {\n        throw err1;\n    });\n}\nmodule.exports.get = get;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/google-translate-token/index.js\n");

/***/ })

};
;