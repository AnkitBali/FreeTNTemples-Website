/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/google-translate-api";
exports.ids = ["vendor-chunks/google-translate-api"];
exports.modules = {

/***/ "(ssr)/./node_modules/google-translate-api/index.js":
/*!****************************************************!*\
  !*** ./node_modules/google-translate-api/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var querystring = __webpack_require__(/*! querystring */ \"querystring\");\nvar got = __webpack_require__(/*! got */ \"(ssr)/./node_modules/got/index.js\");\nvar safeEval = __webpack_require__(/*! safe-eval */ \"(ssr)/./node_modules/safe-eval/index.js\");\nvar token = __webpack_require__(/*! google-translate-token */ \"(ssr)/./node_modules/google-translate-token/index.js\");\nvar languages = __webpack_require__(/*! ./languages */ \"(ssr)/./node_modules/google-translate-api/languages.js\");\nfunction translate(text, opts) {\n    opts = opts || {};\n    var e;\n    [\n        opts.from,\n        opts.to\n    ].forEach(function(lang) {\n        if (lang && !languages.isSupported(lang)) {\n            e = new Error();\n            e.code = 400;\n            e.message = \"The language '\" + lang + \"' is not supported\";\n        }\n    });\n    if (e) {\n        return new Promise(function(resolve, reject) {\n            reject(e);\n        });\n    }\n    opts.from = opts.from || \"auto\";\n    opts.to = opts.to || \"en\";\n    opts.from = languages.getCode(opts.from);\n    opts.to = languages.getCode(opts.to);\n    return token.get(text).then(function(token) {\n        var url = \"https://translate.google.com/translate_a/single\";\n        var data = {\n            client: \"t\",\n            sl: opts.from,\n            tl: opts.to,\n            hl: opts.to,\n            dt: [\n                \"at\",\n                \"bd\",\n                \"ex\",\n                \"ld\",\n                \"md\",\n                \"qca\",\n                \"rw\",\n                \"rm\",\n                \"ss\",\n                \"t\"\n            ],\n            ie: \"UTF-8\",\n            oe: \"UTF-8\",\n            otf: 1,\n            ssel: 0,\n            tsel: 0,\n            kc: 7,\n            q: text\n        };\n        data[token.name] = token.value;\n        return url + \"?\" + querystring.stringify(data);\n    }).then(function(url) {\n        return got(url).then(function(res) {\n            var result = {\n                text: \"\",\n                from: {\n                    language: {\n                        didYouMean: false,\n                        iso: \"\"\n                    },\n                    text: {\n                        autoCorrected: false,\n                        value: \"\",\n                        didYouMean: false\n                    }\n                },\n                raw: \"\"\n            };\n            if (opts.raw) {\n                result.raw = res.body;\n            }\n            var body = safeEval(res.body);\n            body[0].forEach(function(obj) {\n                if (obj[0]) {\n                    result.text += obj[0];\n                }\n            });\n            if (body[2] === body[8][0][0]) {\n                result.from.language.iso = body[2];\n            } else {\n                result.from.language.didYouMean = true;\n                result.from.language.iso = body[8][0][0];\n            }\n            if (body[7] && body[7][0]) {\n                var str = body[7][0];\n                str = str.replace(/<b><i>/g, \"[\");\n                str = str.replace(/<\\/i><\\/b>/g, \"]\");\n                result.from.text.value = str;\n                if (body[7][5] === true) {\n                    result.from.text.autoCorrected = true;\n                } else {\n                    result.from.text.didYouMean = true;\n                }\n            }\n            return result;\n        }).catch(function(err) {\n            var e;\n            e = new Error();\n            if (err.statusCode !== undefined && err.statusCode !== 200) {\n                e.code = \"BAD_REQUEST\";\n            } else {\n                e.code = \"BAD_NETWORK\";\n            }\n            throw e;\n        });\n    });\n}\nmodule.exports = translate;\nmodule.exports.languages = languages;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/google-translate-api/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/google-translate-api/languages.js":
/*!********************************************************!*\
  !*** ./node_modules/google-translate-api/languages.js ***!
  \********************************************************/
/***/ ((module) => {

eval("/**\n *\n * Generated from https://translate.google.com\n *\n * The languages that Google Translate supports (as of 5/15/16) alongside with their ISO 639-1 codes\n * See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n */ var langs = {\n    \"auto\": \"Automatic\",\n    \"af\": \"Afrikaans\",\n    \"sq\": \"Albanian\",\n    \"am\": \"Amharic\",\n    \"ar\": \"Arabic\",\n    \"hy\": \"Armenian\",\n    \"az\": \"Azerbaijani\",\n    \"eu\": \"Basque\",\n    \"be\": \"Belarusian\",\n    \"bn\": \"Bengali\",\n    \"bs\": \"Bosnian\",\n    \"bg\": \"Bulgarian\",\n    \"ca\": \"Catalan\",\n    \"ceb\": \"Cebuano\",\n    \"ny\": \"Chichewa\",\n    \"zh-cn\": \"Chinese Simplified\",\n    \"zh-tw\": \"Chinese Traditional\",\n    \"co\": \"Corsican\",\n    \"hr\": \"Croatian\",\n    \"cs\": \"Czech\",\n    \"da\": \"Danish\",\n    \"nl\": \"Dutch\",\n    \"en\": \"English\",\n    \"eo\": \"Esperanto\",\n    \"et\": \"Estonian\",\n    \"tl\": \"Filipino\",\n    \"fi\": \"Finnish\",\n    \"fr\": \"French\",\n    \"fy\": \"Frisian\",\n    \"gl\": \"Galician\",\n    \"ka\": \"Georgian\",\n    \"de\": \"German\",\n    \"el\": \"Greek\",\n    \"gu\": \"Gujarati\",\n    \"ht\": \"Haitian Creole\",\n    \"ha\": \"Hausa\",\n    \"haw\": \"Hawaiian\",\n    \"iw\": \"Hebrew\",\n    \"hi\": \"Hindi\",\n    \"hmn\": \"Hmong\",\n    \"hu\": \"Hungarian\",\n    \"is\": \"Icelandic\",\n    \"ig\": \"Igbo\",\n    \"id\": \"Indonesian\",\n    \"ga\": \"Irish\",\n    \"it\": \"Italian\",\n    \"ja\": \"Japanese\",\n    \"jw\": \"Javanese\",\n    \"kn\": \"Kannada\",\n    \"kk\": \"Kazakh\",\n    \"km\": \"Khmer\",\n    \"ko\": \"Korean\",\n    \"ku\": \"Kurdish (Kurmanji)\",\n    \"ky\": \"Kyrgyz\",\n    \"lo\": \"Lao\",\n    \"la\": \"Latin\",\n    \"lv\": \"Latvian\",\n    \"lt\": \"Lithuanian\",\n    \"lb\": \"Luxembourgish\",\n    \"mk\": \"Macedonian\",\n    \"mg\": \"Malagasy\",\n    \"ms\": \"Malay\",\n    \"ml\": \"Malayalam\",\n    \"mt\": \"Maltese\",\n    \"mi\": \"Maori\",\n    \"mr\": \"Marathi\",\n    \"mn\": \"Mongolian\",\n    \"my\": \"Myanmar (Burmese)\",\n    \"ne\": \"Nepali\",\n    \"no\": \"Norwegian\",\n    \"ps\": \"Pashto\",\n    \"fa\": \"Persian\",\n    \"pl\": \"Polish\",\n    \"pt\": \"Portuguese\",\n    \"ma\": \"Punjabi\",\n    \"ro\": \"Romanian\",\n    \"ru\": \"Russian\",\n    \"sm\": \"Samoan\",\n    \"gd\": \"Scots Gaelic\",\n    \"sr\": \"Serbian\",\n    \"st\": \"Sesotho\",\n    \"sn\": \"Shona\",\n    \"sd\": \"Sindhi\",\n    \"si\": \"Sinhala\",\n    \"sk\": \"Slovak\",\n    \"sl\": \"Slovenian\",\n    \"so\": \"Somali\",\n    \"es\": \"Spanish\",\n    \"su\": \"Sundanese\",\n    \"sw\": \"Swahili\",\n    \"sv\": \"Swedish\",\n    \"tg\": \"Tajik\",\n    \"ta\": \"Tamil\",\n    \"te\": \"Telugu\",\n    \"th\": \"Thai\",\n    \"tr\": \"Turkish\",\n    \"uk\": \"Ukrainian\",\n    \"ur\": \"Urdu\",\n    \"uz\": \"Uzbek\",\n    \"vi\": \"Vietnamese\",\n    \"cy\": \"Welsh\",\n    \"xh\": \"Xhosa\",\n    \"yi\": \"Yiddish\",\n    \"yo\": \"Yoruba\",\n    \"zu\": \"Zulu\"\n};\n/**\n * Returns the ISO 639-1 code of the desiredLang – if it is supported by Google Translate\n * @param {string} desiredLang – the name or the code of the desired language\n * @returns {string|boolean} The ISO 639-1 code of the language or false if the language is not supported\n */ function getCode(desiredLang) {\n    if (!desiredLang) {\n        return false;\n    }\n    desiredLang = desiredLang.toLowerCase();\n    if (langs[desiredLang]) {\n        return desiredLang;\n    }\n    var keys = Object.keys(langs).filter(function(key) {\n        if (typeof langs[key] !== \"string\") {\n            return false;\n        }\n        return langs[key].toLowerCase() === desiredLang;\n    });\n    return keys[0] || false;\n}\n/**\n * Returns true if the desiredLang is supported by Google Translate and false otherwise\n * @param desiredLang – the ISO 639-1 code or the name of the desired language\n * @returns {boolean}\n */ function isSupported(desiredLang) {\n    return Boolean(getCode(desiredLang));\n}\nmodule.exports = langs;\nmodule.exports.isSupported = isSupported;\nmodule.exports.getCode = getCode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZ29vZ2xlLXRyYW5zbGF0ZS1hcGkvbGFuZ3VhZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Q0FNQyxHQUVELElBQUlBLFFBQVE7SUFDUixRQUFRO0lBQ1IsTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sT0FBTztJQUNQLE1BQU07SUFDTixTQUFTO0lBQ1QsU0FBUztJQUNULE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixPQUFPO0lBQ1AsTUFBTTtJQUNOLE1BQU07SUFDTixPQUFPO0lBQ1AsTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07SUFDTixNQUFNO0lBQ04sTUFBTTtJQUNOLE1BQU07QUFDVjtBQUNBOzs7O0NBSUMsR0FDRCxTQUFTQyxRQUFRQyxXQUFXO0lBQ3hCLElBQUksQ0FBQ0EsYUFBYTtRQUNkLE9BQU87SUFDWDtJQUNBQSxjQUFjQSxZQUFZQyxXQUFXO0lBRXJDLElBQUlILEtBQUssQ0FBQ0UsWUFBWSxFQUFFO1FBQ3BCLE9BQU9BO0lBQ1g7SUFFQSxJQUFJRSxPQUFPQyxPQUFPRCxJQUFJLENBQUNKLE9BQU9NLE1BQU0sQ0FBQyxTQUFVQyxHQUFHO1FBQzlDLElBQUksT0FBT1AsS0FBSyxDQUFDTyxJQUFJLEtBQUssVUFBVTtZQUNoQyxPQUFPO1FBQ1g7UUFFQSxPQUFPUCxLQUFLLENBQUNPLElBQUksQ0FBQ0osV0FBVyxPQUFPRDtJQUN4QztJQUVBLE9BQU9FLElBQUksQ0FBQyxFQUFFLElBQUk7QUFDdEI7QUFFQTs7OztDQUlDLEdBQ0QsU0FBU0ksWUFBWU4sV0FBVztJQUM1QixPQUFPTyxRQUFRUixRQUFRQztBQUMzQjtBQUVBUSxPQUFPQyxPQUFPLEdBQUdYO0FBQ2pCVSwwQkFBMEIsR0FBR0Y7QUFDN0JFLHNCQUFzQixHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9nb29nbGUtdHJhbnNsYXRlLWFwaS9sYW5ndWFnZXMuanM/M2I3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBHZW5lcmF0ZWQgZnJvbSBodHRwczovL3RyYW5zbGF0ZS5nb29nbGUuY29tXG4gKlxuICogVGhlIGxhbmd1YWdlcyB0aGF0IEdvb2dsZSBUcmFuc2xhdGUgc3VwcG9ydHMgKGFzIG9mIDUvMTUvMTYpIGFsb25nc2lkZSB3aXRoIHRoZWlyIElTTyA2MzktMSBjb2Rlc1xuICogU2VlIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xpc3Rfb2ZfSVNPXzYzOS0xX2NvZGVzXG4gKi9cblxudmFyIGxhbmdzID0ge1xuICAgICdhdXRvJzogJ0F1dG9tYXRpYycsXG4gICAgJ2FmJzogJ0FmcmlrYWFucycsXG4gICAgJ3NxJzogJ0FsYmFuaWFuJyxcbiAgICAnYW0nOiAnQW1oYXJpYycsXG4gICAgJ2FyJzogJ0FyYWJpYycsXG4gICAgJ2h5JzogJ0FybWVuaWFuJyxcbiAgICAnYXonOiAnQXplcmJhaWphbmknLFxuICAgICdldSc6ICdCYXNxdWUnLFxuICAgICdiZSc6ICdCZWxhcnVzaWFuJyxcbiAgICAnYm4nOiAnQmVuZ2FsaScsXG4gICAgJ2JzJzogJ0Jvc25pYW4nLFxuICAgICdiZyc6ICdCdWxnYXJpYW4nLFxuICAgICdjYSc6ICdDYXRhbGFuJyxcbiAgICAnY2ViJzogJ0NlYnVhbm8nLFxuICAgICdueSc6ICdDaGljaGV3YScsXG4gICAgJ3poLWNuJzogJ0NoaW5lc2UgU2ltcGxpZmllZCcsXG4gICAgJ3poLXR3JzogJ0NoaW5lc2UgVHJhZGl0aW9uYWwnLFxuICAgICdjbyc6ICdDb3JzaWNhbicsXG4gICAgJ2hyJzogJ0Nyb2F0aWFuJyxcbiAgICAnY3MnOiAnQ3plY2gnLFxuICAgICdkYSc6ICdEYW5pc2gnLFxuICAgICdubCc6ICdEdXRjaCcsXG4gICAgJ2VuJzogJ0VuZ2xpc2gnLFxuICAgICdlbyc6ICdFc3BlcmFudG8nLFxuICAgICdldCc6ICdFc3RvbmlhbicsXG4gICAgJ3RsJzogJ0ZpbGlwaW5vJyxcbiAgICAnZmknOiAnRmlubmlzaCcsXG4gICAgJ2ZyJzogJ0ZyZW5jaCcsXG4gICAgJ2Z5JzogJ0ZyaXNpYW4nLFxuICAgICdnbCc6ICdHYWxpY2lhbicsXG4gICAgJ2thJzogJ0dlb3JnaWFuJyxcbiAgICAnZGUnOiAnR2VybWFuJyxcbiAgICAnZWwnOiAnR3JlZWsnLFxuICAgICdndSc6ICdHdWphcmF0aScsXG4gICAgJ2h0JzogJ0hhaXRpYW4gQ3Jlb2xlJyxcbiAgICAnaGEnOiAnSGF1c2EnLFxuICAgICdoYXcnOiAnSGF3YWlpYW4nLFxuICAgICdpdyc6ICdIZWJyZXcnLFxuICAgICdoaSc6ICdIaW5kaScsXG4gICAgJ2htbic6ICdIbW9uZycsXG4gICAgJ2h1JzogJ0h1bmdhcmlhbicsXG4gICAgJ2lzJzogJ0ljZWxhbmRpYycsXG4gICAgJ2lnJzogJ0lnYm8nLFxuICAgICdpZCc6ICdJbmRvbmVzaWFuJyxcbiAgICAnZ2EnOiAnSXJpc2gnLFxuICAgICdpdCc6ICdJdGFsaWFuJyxcbiAgICAnamEnOiAnSmFwYW5lc2UnLFxuICAgICdqdyc6ICdKYXZhbmVzZScsXG4gICAgJ2tuJzogJ0thbm5hZGEnLFxuICAgICdrayc6ICdLYXpha2gnLFxuICAgICdrbSc6ICdLaG1lcicsXG4gICAgJ2tvJzogJ0tvcmVhbicsXG4gICAgJ2t1JzogJ0t1cmRpc2ggKEt1cm1hbmppKScsXG4gICAgJ2t5JzogJ0t5cmd5eicsXG4gICAgJ2xvJzogJ0xhbycsXG4gICAgJ2xhJzogJ0xhdGluJyxcbiAgICAnbHYnOiAnTGF0dmlhbicsXG4gICAgJ2x0JzogJ0xpdGh1YW5pYW4nLFxuICAgICdsYic6ICdMdXhlbWJvdXJnaXNoJyxcbiAgICAnbWsnOiAnTWFjZWRvbmlhbicsXG4gICAgJ21nJzogJ01hbGFnYXN5JyxcbiAgICAnbXMnOiAnTWFsYXknLFxuICAgICdtbCc6ICdNYWxheWFsYW0nLFxuICAgICdtdCc6ICdNYWx0ZXNlJyxcbiAgICAnbWknOiAnTWFvcmknLFxuICAgICdtcic6ICdNYXJhdGhpJyxcbiAgICAnbW4nOiAnTW9uZ29saWFuJyxcbiAgICAnbXknOiAnTXlhbm1hciAoQnVybWVzZSknLFxuICAgICduZSc6ICdOZXBhbGknLFxuICAgICdubyc6ICdOb3J3ZWdpYW4nLFxuICAgICdwcyc6ICdQYXNodG8nLFxuICAgICdmYSc6ICdQZXJzaWFuJyxcbiAgICAncGwnOiAnUG9saXNoJyxcbiAgICAncHQnOiAnUG9ydHVndWVzZScsXG4gICAgJ21hJzogJ1B1bmphYmknLFxuICAgICdybyc6ICdSb21hbmlhbicsXG4gICAgJ3J1JzogJ1J1c3NpYW4nLFxuICAgICdzbSc6ICdTYW1vYW4nLFxuICAgICdnZCc6ICdTY290cyBHYWVsaWMnLFxuICAgICdzcic6ICdTZXJiaWFuJyxcbiAgICAnc3QnOiAnU2Vzb3RobycsXG4gICAgJ3NuJzogJ1Nob25hJyxcbiAgICAnc2QnOiAnU2luZGhpJyxcbiAgICAnc2knOiAnU2luaGFsYScsXG4gICAgJ3NrJzogJ1Nsb3ZhaycsXG4gICAgJ3NsJzogJ1Nsb3ZlbmlhbicsXG4gICAgJ3NvJzogJ1NvbWFsaScsXG4gICAgJ2VzJzogJ1NwYW5pc2gnLFxuICAgICdzdSc6ICdTdW5kYW5lc2UnLFxuICAgICdzdyc6ICdTd2FoaWxpJyxcbiAgICAnc3YnOiAnU3dlZGlzaCcsXG4gICAgJ3RnJzogJ1RhamlrJyxcbiAgICAndGEnOiAnVGFtaWwnLFxuICAgICd0ZSc6ICdUZWx1Z3UnLFxuICAgICd0aCc6ICdUaGFpJyxcbiAgICAndHInOiAnVHVya2lzaCcsXG4gICAgJ3VrJzogJ1VrcmFpbmlhbicsXG4gICAgJ3VyJzogJ1VyZHUnLFxuICAgICd1eic6ICdVemJlaycsXG4gICAgJ3ZpJzogJ1ZpZXRuYW1lc2UnLFxuICAgICdjeSc6ICdXZWxzaCcsXG4gICAgJ3hoJzogJ1hob3NhJyxcbiAgICAneWknOiAnWWlkZGlzaCcsXG4gICAgJ3lvJzogJ1lvcnViYScsXG4gICAgJ3p1JzogJ1p1bHUnXG59O1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBJU08gNjM5LTEgY29kZSBvZiB0aGUgZGVzaXJlZExhbmcg4oCTIGlmIGl0IGlzIHN1cHBvcnRlZCBieSBHb29nbGUgVHJhbnNsYXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gZGVzaXJlZExhbmcg4oCTIHRoZSBuYW1lIG9yIHRoZSBjb2RlIG9mIHRoZSBkZXNpcmVkIGxhbmd1YWdlXG4gKiBAcmV0dXJucyB7c3RyaW5nfGJvb2xlYW59IFRoZSBJU08gNjM5LTEgY29kZSBvZiB0aGUgbGFuZ3VhZ2Ugb3IgZmFsc2UgaWYgdGhlIGxhbmd1YWdlIGlzIG5vdCBzdXBwb3J0ZWRcbiAqL1xuZnVuY3Rpb24gZ2V0Q29kZShkZXNpcmVkTGFuZykge1xuICAgIGlmICghZGVzaXJlZExhbmcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBkZXNpcmVkTGFuZyA9IGRlc2lyZWRMYW5nLnRvTG93ZXJDYXNlKCk7XG5cbiAgICBpZiAobGFuZ3NbZGVzaXJlZExhbmddKSB7XG4gICAgICAgIHJldHVybiBkZXNpcmVkTGFuZztcbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGxhbmdzKS5maWx0ZXIoZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAodHlwZW9mIGxhbmdzW2tleV0gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbGFuZ3Nba2V5XS50b0xvd2VyQ2FzZSgpID09PSBkZXNpcmVkTGFuZztcbiAgICB9KTtcblxuICAgIHJldHVybiBrZXlzWzBdIHx8IGZhbHNlO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZGVzaXJlZExhbmcgaXMgc3VwcG9ydGVkIGJ5IEdvb2dsZSBUcmFuc2xhdGUgYW5kIGZhbHNlIG90aGVyd2lzZVxuICogQHBhcmFtIGRlc2lyZWRMYW5nIOKAkyB0aGUgSVNPIDYzOS0xIGNvZGUgb3IgdGhlIG5hbWUgb2YgdGhlIGRlc2lyZWQgbGFuZ3VhZ2VcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc1N1cHBvcnRlZChkZXNpcmVkTGFuZykge1xuICAgIHJldHVybiBCb29sZWFuKGdldENvZGUoZGVzaXJlZExhbmcpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsYW5ncztcbm1vZHVsZS5leHBvcnRzLmlzU3VwcG9ydGVkID0gaXNTdXBwb3J0ZWQ7XG5tb2R1bGUuZXhwb3J0cy5nZXRDb2RlID0gZ2V0Q29kZTtcbiJdLCJuYW1lcyI6WyJsYW5ncyIsImdldENvZGUiLCJkZXNpcmVkTGFuZyIsInRvTG93ZXJDYXNlIiwia2V5cyIsIk9iamVjdCIsImZpbHRlciIsImtleSIsImlzU3VwcG9ydGVkIiwiQm9vbGVhbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/google-translate-api/languages.js\n");

/***/ })

};
;